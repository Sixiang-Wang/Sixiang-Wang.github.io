<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.unfinished.top</id>
    <title>机煲的小窝 • Posts by &#34;编译原理&#34; tag</title>
    <link href="https://blog.unfinished.top" />
    <updated>2024-12-17T15:17:09.000Z</updated>
    <category term="大学" />
    <category term="总结" />
    <category term="编译" />
    <category term="Java" />
    <category term="Hexo" />
    <category term="格式" />
    <category term="测试" />
    <category term="考研" />
    <category term="高等数学" />
    <category term="编译原理" />
    <category term="操作系统" />
    <category term="数字电路" />
    <category term="计组" />
    <category term="计网" />
    <entry>
        <id>https://blog.unfinished.top/2024/12/17/%E6%88%91%E8%A6%81%E6%88%90%E4%B8%BA%E7%BC%96%E8%AF%91%E9%AB%98%E6%89%8B/</id>
        <title>我要成为编译高手</title>
        <link rel="alternate" href="https://blog.unfinished.top/2024/12/17/%E6%88%91%E8%A6%81%E6%88%90%E4%B8%BA%E7%BC%96%E8%AF%91%E9%AB%98%E6%89%8B/"/>
        <content type="html">&lt;p&gt;&lt;img src=&#34;%E6%88%91%E8%A6%81%E6%88%90%E4%B8%BA%E9%AB%98%E6%89%8B.jpg&#34; alt=&#34;我要成为高手&#34;&gt;&lt;/p&gt;
&lt;h1&gt;文法&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mtext&gt;符号串乘积&lt;/mtext&gt;&lt;mo stretchy=&#34;false&#34;&gt;{&lt;/mo&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;}&lt;/mo&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;{&lt;/mo&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;}&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;{&lt;/mo&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mtext&gt;，&lt;/mtext&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mtext&gt;，&lt;/mtext&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mtext&gt;，&lt;/mtext&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;}&lt;/mo&gt;&lt;mspace linebreak=&#34;newline&#34;&gt;&lt;/mspace&gt;&lt;mtext&gt;幂运算&lt;/mtext&gt;&lt;mspace linebreak=&#34;newline&#34;&gt;&lt;/mspace&gt;&lt;msup&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;ε&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mspace linebreak=&#34;newline&#34;&gt;&lt;/mspace&gt;&lt;mtext&gt;正闭包&lt;/mtext&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;/msup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;∪&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mo&gt;∪&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msup&gt;&lt;mspace linebreak=&#34;newline&#34;&gt;&lt;/mspace&gt;&lt;mtext&gt;闭包&lt;/mtext&gt;&lt;mo&gt;:&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;/msup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;∪&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;∪&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;.&lt;/mi&gt;&lt;mo&gt;∪&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;符号串乘积\{a,b\} * \{c,d\} = \{ac，ad，bc，bd\}\\
幂运算\\
A^0={ε},A^1 = A ,A^2 = AA\\
正闭包:
A^+=A^1∪A^2...∪A^n\\
闭包:
A^*=A^0∪A^1∪A^2...∪A^n
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;符&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;号&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;串&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;乘&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;积&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∗&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace newline&#34;&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;幂&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;运&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;算&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace newline&#34;&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8641079999999999em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8641079999999999em;&#34;&gt;&lt;span style=&#34;top:-3.113em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.0585479999999998em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;ε&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8641079999999999em;&#34;&gt;&lt;span style=&#34;top:-3.113em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.0585479999999998em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.16666666666666666em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8641079999999999em;&#34;&gt;&lt;span style=&#34;top:-3.113em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace newline&#34;&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;正&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;闭&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;包&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.821331em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.821331em;&#34;&gt;&lt;span style=&#34;top:-3.113em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mbin mtight&#34;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8641079999999999em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8641079999999999em;&#34;&gt;&lt;span style=&#34;top:-3.113em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∪&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8641079999999999em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8641079999999999em;&#34;&gt;&lt;span style=&#34;top:-3.113em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∪&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7143919999999999em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.7143919999999999em;&#34;&gt;&lt;span style=&#34;top:-3.113em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace newline&#34;&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;闭&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;包&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.738696em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.738696em;&#34;&gt;&lt;span style=&#34;top:-3.113em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mbin mtight&#34;&gt;∗&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8641079999999999em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8641079999999999em;&#34;&gt;&lt;span style=&#34;top:-3.113em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∪&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8641079999999999em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8641079999999999em;&#34;&gt;&lt;span style=&#34;top:-3.113em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∪&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8641079999999999em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8641079999999999em;&#34;&gt;&lt;span style=&#34;top:-3.113em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;∪&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7143919999999999em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.7143919999999999em;&#34;&gt;&lt;span style=&#34;top:-3.113em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Vn：非终结符号集&lt;/p&gt;
&lt;p&gt;Vt：终结符号集&lt;/p&gt;
&lt;p&gt;P：产生式或规则的集合&lt;/p&gt;
&lt;p&gt;Z：开始符号（识别符号） Z∈Vn&lt;/p&gt;
&lt;h3 id=&#34;基本概念&#34;&gt;基本概念&lt;/h3&gt;
&lt;h4 id=&#34;推导&#34;&gt;推导&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;image-20241210135553750.png&#34; alt=&#34;image-20241210135553750&#34; style=&#34;zoom:67%;&#34; /&gt; 一步或多步&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;1733810193966(1).png&#34; alt=&#34;1733810193966(1)&#34; style=&#34;zoom: 67%;&#34; /&gt; 零步一步或多步&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最右推导&lt;/strong&gt;：规范&lt;/p&gt;
&lt;h4 id=&#34;句子句型&#34;&gt;句子句型&lt;/h4&gt;
&lt;p&gt;句型：Z零步一步或多步推导到x&lt;/p&gt;
&lt;p&gt;句子：Z一步或多步推导到x，且x内符号都是终结符&lt;/p&gt;
&lt;p&gt;语言：所有句子的集合 L(G[Z])&lt;/p&gt;
&lt;p&gt;若两个文法语言相同，则文法等价。&lt;/p&gt;
&lt;h4 id=&#34;短语、句柄&#34;&gt;短语、句柄&lt;/h4&gt;
&lt;p&gt;短语是相对于一个&lt;strong&gt;句型&lt;/strong&gt;的&lt;/p&gt;
&lt;p&gt;简单短语要求只有一步推导&lt;/p&gt;
&lt;p&gt;句柄是最左简单短语&lt;/p&gt;
&lt;h4 id=&#34;规约&#34;&gt;规约&lt;/h4&gt;
&lt;p&gt;按照最左简单短语进行规约为规范规约。&lt;/p&gt;
&lt;p&gt;规范：&lt;strong&gt;最左规约&lt;/strong&gt;，&lt;strong&gt;最右推导&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;递归文法&#34;&gt;递归文法&lt;/h3&gt;
&lt;p&gt;U::= Uy，左递归&lt;/p&gt;
&lt;p&gt;U::= xU，右递归&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;左递归不能用自顶向下&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;二义性&#34;&gt;二义性&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;一个文法的某一句子存在两棵不同的语法树，则该文法是二义性的&lt;/li&gt;
&lt;li&gt;若一个文法的某句子存在两个不同的规范推导，则该文法是二义性的&lt;/li&gt;
&lt;li&gt;若一个文法的某规范句型的句柄不唯一，则该文法是二义性的&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;压缩文法&#34;&gt;压缩文法&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;U::=U&lt;/strong&gt;的文法是有害的&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;规则的左部非终结符不出现在任何句型中&lt;/strong&gt;的文法是无用的&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;无有害规则或多余规则&lt;/strong&gt;的文法是&lt;strong&gt;压缩过的&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;文法类型&#34;&gt;文法类型&lt;/h3&gt;
&lt;p&gt;0型：左部和右部都可以是符号串；一个短语可以产生另一个短语；可以被&lt;strong&gt;图灵机&lt;/strong&gt;接受&lt;/p&gt;
&lt;p&gt;1型：上下文有关文法，&lt;strong&gt;xUy::= xuy&lt;/strong&gt; ; 可以被&lt;strong&gt;线性界限自动机接受&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2型：上下文无关文法，&lt;strong&gt;U::= u&lt;/strong&gt;，U∈Vn ,  n∈V* ； 可以被&lt;strong&gt;下推自动机&lt;/strong&gt;接受&lt;/p&gt;
&lt;p&gt;3型：正则文法，&lt;strong&gt;U::=t&lt;/strong&gt;，U::=Wt（左线性）或U::=tW（右线性） &lt;strong&gt;其中U、W∈Vn，t∈Vt&lt;/strong&gt;，可以被&lt;strong&gt;有穷自动机&lt;/strong&gt;接受&lt;/p&gt;
&lt;h1&gt;词法分析&lt;/h1&gt;
&lt;h3 id=&#34;状态图&#34;&gt;状态图&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;左线性文法&lt;/strong&gt;状态图：&lt;/p&gt;
&lt;p&gt;设置开始状态S，若Q::=t, &lt;img src=&#34;1733812726285.png&#34; alt=&#34;1733812726285&#34; style=&#34;zoom: 50%;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;若Q::=Rt，&lt;img src=&#34;1733812771271.png&#34; alt=&#34;1733812771271&#34; style=&#34;zoom:50%;&#34; /&gt;&lt;/p&gt;
&lt;img src=&#34;1733813469367.png&#34; alt=&#34;1733813469367&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;h3 id=&#34;正则表达式&#34;&gt;正则表达式&lt;/h3&gt;
&lt;p&gt;运算符&lt;/p&gt;
&lt;p&gt;|：或&lt;/p&gt;
&lt;p&gt;*或{ }：重复&lt;/p&gt;
&lt;h3 id=&#34;DFA&#34;&gt;DFA&lt;/h3&gt;
&lt;img src=&#34;1733814606183.png&#34; alt=&#34;1733814606183&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;h3 id=&#34;NFA（非确定）&#34;&gt;NFA（非确定）&lt;/h3&gt;
&lt;p&gt;一个状态经过一个终结符可以到多个状态，可以输入空值&lt;/p&gt;
&lt;img src=&#34;1733814412975.png&#34; alt=&#34;1733814412975&#34; style=&#34;zoom: 67%;&#34; /&gt; 
&lt;h3 id=&#34;生成NFA（和状态图不一样）&#34;&gt;生成NFA（和状态图不一样）&lt;/h3&gt;
&lt;p&gt;用右线性文法，因为左线性会死循环&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A→tB&lt;/strong&gt;：&lt;img src=&#34;1733815716718.png&#34; alt=&#34;1733815716718&#34; style=&#34;zoom:50%;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;A→t：则A经过t到终结状态&lt;/p&gt;
&lt;img src=&#34;1733816009576.png&#34; alt=&#34;1733816009576&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;img src=&#34;1733816058396.png&#34; alt=&#34;1733816058396&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;p&gt;或&lt;/p&gt;
&lt;img src=&#34;1733816105599.png&#34; alt=&#34;1733816105599&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;h3 id=&#34;NFA的确定化&#34;&gt;NFA的确定化&lt;/h3&gt;
&lt;p&gt;1.确定集合I的&lt;strong&gt;ε-闭包&lt;/strong&gt;：I以及从I经过ε弧能到的所有状态集合&lt;/p&gt;
&lt;p&gt;2.确定闭包的Ia、Ib、…&lt;/p&gt;
&lt;img src=&#34;1733815278257.png&#34; alt=&#34;1733815278257&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;p&gt;3.得到新的状态图&lt;/p&gt;
&lt;img src=&#34;1733815410213.png&#34; alt=&#34;1733815410213&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;h3 id=&#34;最小化&#34;&gt;最小化&lt;/h3&gt;
&lt;p&gt;消除多余状态：肉眼看，删除不会到达的状态&lt;/p&gt;
&lt;p&gt;划分等价状态：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将状态先分为终结状态和非终结状态&lt;/li&gt;
&lt;li&gt;在每个区域中看哪些状态经过符号后到达的状态等价&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;语法分析&lt;/h1&gt;
&lt;h2 id=&#34;自顶向下分析&#34;&gt;自顶向下分析&lt;/h2&gt;
&lt;p&gt;不能有左递归！&lt;/p&gt;
&lt;p&gt;要消除左递归：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用BNF改写：
&lt;ol&gt;
&lt;li&gt;U::= xy|xw → U::=x(y|w)&lt;/li&gt;
&lt;li&gt;T∷= T * F | T / F | F  → T∷= F { * F | / F }&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;左递归改成右递归：
&lt;ol&gt;
&lt;li&gt;P::= Pa|b  →  P ::= bP’     P’ ::=aP’ | ε&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;消除一般左递归：&lt;/p&gt;
&lt;img src=&#34;1733819340540.png&#34; alt=&#34;1733819340540&#34; style=&#34;zoom: 67%;&#34; /&gt; 
&lt;img src=&#34;1733819367290(1).png&#34; alt=&#34;1733819367290(1)&#34; style=&#34;zoom: 67%;&#34; /&gt; 
&lt;p&gt;消除回溯问题，将xV|xU改成 x(V|U)，并尽力保证FIRST(V)和FIRST(U)不相交。&lt;/p&gt;
&lt;p&gt;无法消除回溯的话，可以超前扫描几个符号&lt;/p&gt;
&lt;h3 id=&#34;递归下降子程序&#34;&gt;递归下降子程序&lt;/h3&gt;
&lt;p&gt;简单&lt;/p&gt;
&lt;img src=&#34;1733819654619.png&#34; alt=&#34;1733819654619&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;h3 id=&#34;LL-1-分析法&#34;&gt;LL(1)分析法&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;自左向右扫描&lt;/strong&gt;符号串&lt;/p&gt;
&lt;h4 id=&#34;First、Follow集&#34;&gt;First、Follow集&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;First&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;若Xi∈Vt，则First(Xi)={Xi}&lt;/p&gt;
&lt;p&gt;若Xi∈Vn，Xi::= a…| ε, First(Xi) = {a, ε}&lt;/p&gt;
&lt;p&gt;若Xi∈Vn ，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xi::= y1y2…yk，将FIRST(y1 ) – {ε} 加入First（Xi）&lt;/li&gt;
&lt;li&gt;若ε ∈ FIRST( y1 ) ，则将FIRST(y2 ) – {ε} 加入&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;li&gt;若全都有ε，First集加入ε&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Follow&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;若S为识别符号，则 # 加入Follow（S）&lt;/p&gt;
&lt;p&gt;若 A ::= αBβ 则把 &lt;strong&gt;FIRST(β)-{ε}&lt;/strong&gt; 加入到 Follow（B）&lt;/p&gt;
&lt;p&gt;若 A ::= αBβ β能推出ε  或 A::= αB ，则把**Follow(A)**加入到Follow(B)&lt;/p&gt;
&lt;h4 id=&#34;构造分析表&#34;&gt;构造分析表&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;S ::= A是某规则，a为终结符或#,  把所有 a∈ FIRST( A ) ，M[S, a] 放入该条规则&lt;/li&gt;
&lt;li&gt;若A=ε或 A能推出ε，则把所有 a∈ FOLLOW( S )的 M[S,a]放 S::=ε&lt;/li&gt;
&lt;li&gt;剩下的全是error&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;image-20241214144657328.png&#34; alt=&#34;image-20241214144657328&#34; style=&#34;zoom:67%;&#34; /&gt; 
&lt;p&gt;如果没有&lt;strong&gt;多重定义&lt;/strong&gt;入口，则是LL(1)文法&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LL(1)判断方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果是LL（1），那么当 S::= A1|A2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First(A1) &lt;strong&gt;∩&lt;/strong&gt; First(A2) = Ф&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;若A2 是 &lt;strong&gt;ε&lt;/strong&gt;或可推出 &lt;strong&gt;ε&lt;/strong&gt;，那么 First(A1) &lt;strong&gt;∩&lt;/strong&gt; First(S) = Ф&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;执行过程&#34;&gt;执行过程&lt;/h4&gt;
&lt;p&gt;假设E是识别符号&lt;/p&gt;
&lt;p&gt;符号栈开始状态 #E，读入输入串第一个符号&lt;/p&gt;
&lt;p&gt;根据栈顶符号X和输入符号a&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若 X ∈ Vt，X=a=#，停止&lt;/li&gt;
&lt;li&gt;若 X ∈ Vt，X=a不等于#，将X退出栈&lt;/li&gt;
&lt;li&gt;若 X ∈ Vt，X不等于a，出错&lt;/li&gt;
&lt;li&gt;若 X ∈ Vn，查表
&lt;ol&gt;
&lt;li&gt;若M[X,a] 为   X∷= U V W，则X弹出，先后将W、V、U入栈（注意顺序，U在栈顶）&lt;/li&gt;
&lt;li&gt;若M[X,a] 为 &lt;strong&gt;X::=ε&lt;/strong&gt; 则把X弹出栈&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;自底向上分析&#34;&gt;自底向上分析&lt;/h2&gt;
&lt;h3 id=&#34;算符优先分析&#34;&gt;算符优先分析&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;算符文法不允许两个非终结符相邻&lt;/strong&gt;！&lt;/p&gt;
&lt;img src=&#34;image-20241214161251107.png&#34; alt=&#34;image-20241214161251107&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;h4 id=&#34;FirstVT、LastVT&#34;&gt;FirstVT、LastVT&lt;/h4&gt;
&lt;p&gt;… 可以代表任意或为空&lt;/p&gt;
&lt;p&gt;FirstVT( U ) = {b | U→b… 或 U→Vb… ,  b ∈ Vt,  V ∈ Vn}&lt;/p&gt;
&lt;p&gt;LastVT( U ) = {a | U→…a 或 U→…aV ,  a ∈ Vt,  V ∈ Vn}&lt;/p&gt;
&lt;p&gt;构造FirstVT：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果有U::= b… 或 U::= Vb… 则 b∈FIRSTVT( U )&lt;/li&gt;
&lt;li&gt;如果有U::= V…，则所有 b∈FIRSTVT( V )，都有b∈FIRSTVT( U )&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;构造LastVT：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果有U::= …a 或 U::= …aV 则 a∈LASTVT( U )&lt;/li&gt;
&lt;li&gt;如果有U::= …V，则所有 a∈LASTVT( V )，都有a∈LASTVT( U )&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;构造优先关系矩阵&#34;&gt;构造优先关系矩阵&lt;/h4&gt;
&lt;p&gt;打不出来，所以下面&lt;/p&gt;
&lt;p&gt;= 代表&lt;img src=&#34;image-20241214164544651.png&#34; alt=&#34;image-20241214164544651&#34; style=&#34;zoom:50%;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt; 代表 &lt;img src=&#34;image-20241214164608414.png&#34; alt=&#34;image-20241214164608414&#34; style=&#34;zoom:50%;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;gt; 代表&lt;img src=&#34;image-20241214164640513.png&#34; alt=&#34;image-20241214164640513&#34; style=&#34;zoom:50%;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;对于每条规则进行处理，&lt;/p&gt;
&lt;p&gt;假设规则为U::=X1 X2 … Xn&lt;/p&gt;
&lt;p&gt;for（i = 1；i&amp;lt;=n-1 ;  i++）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果Xi 和 Xi+1都是Vt，则 Xi = Xi+1&lt;/li&gt;
&lt;li&gt;如果i&amp;lt;=n-2 且 Xi 和 Xi+2都是Vt，但Xi+1是Vn，则Xi = Xi+2&lt;/li&gt;
&lt;li&gt;如果 Xi 是Vt     Xi+1是Vn ，则 Xi&amp;lt; FIRSTVT(Xi+1)中每个符号&lt;/li&gt;
&lt;li&gt;如果 Xi 是Vn     Xi+1是Vt ，则  LASTVT(Xi)中每个符号 &amp;gt; Xi+1&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;素短语&#34;&gt;素短语&lt;/h4&gt;
&lt;p&gt;素短语是一个 至少包含一个终结符号，且除了它自身不含更小的素短语的 短语&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;句柄是最左短语&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最左素短语不一定是句柄！&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&#34;image-20241214171149086.png&#34; alt=&#34;image-20241214171149086&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;h4 id=&#34;执行过程-2&#34;&gt;执行过程&lt;/h4&gt;
&lt;p&gt;算符优先文法对最左素短语规约&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;lt;：移进&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;=：移进&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;gt;：规约&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;image-20241214155739805.png&#34; alt=&#34;image-20241214155739805&#34;&gt;&lt;/p&gt;
&lt;img src=&#34;image-20241214160049496.png&#34; alt=&#34;image-20241214160049496&#34; style=&#34;zoom:67%;&#34; /&gt; 
&lt;h3 id=&#34;LR分析法&#34;&gt;LR分析法&lt;/h3&gt;
&lt;p&gt;哦我的老天&lt;/p&gt;
&lt;p&gt;LR分析法规约的是句柄，算符优先归约的是最左素短语&lt;/p&gt;
&lt;h4 id=&#34;活前缀&#34;&gt;活前缀&lt;/h4&gt;
&lt;p&gt;规范句型是通过规范规约（最左）得到的句型&lt;/p&gt;
&lt;p&gt;对于 αβt ，β表示句柄 ，若αβ = u1u2…ur，那么符号串u1…ui（1&amp;lt;=i&amp;lt;=r）是活前缀&lt;/p&gt;
&lt;h4 id=&#34;构造LR-0&#34;&gt;构造LR(0)&lt;/h4&gt;
&lt;p&gt;1.让文法开始符号的规则只有一条&lt;/p&gt;
&lt;p&gt;2.构造闭包项目集&lt;/p&gt;
&lt;p&gt;3.构造goto&lt;/p&gt;
&lt;p&gt;action构造：&lt;/p&gt;
&lt;p&gt;A→a. 规约&lt;/p&gt;
&lt;p&gt;E’→a. 接受&lt;/p&gt;
&lt;p&gt;A→a.b （b∈ Vt）移进&lt;/p&gt;
&lt;p&gt;A→a.b （b∈ Vn）待约（无动作）&lt;/p&gt;
&lt;p&gt;会有 移进-规约 冲突&lt;/p&gt;
&lt;h4 id=&#34;SLR（0）&#34;&gt;SLR（0）&lt;/h4&gt;
&lt;p&gt;改为看Follow集&lt;/p&gt;
&lt;p&gt;当A→α.     B→α.    X→α.b&lt;/p&gt;
&lt;p&gt;读入符号当 a = b，移进&lt;/p&gt;
&lt;p&gt;a∈Follow（A），A→α&lt;/p&gt;
&lt;p&gt;a∈Follow（B），B→α&lt;/p&gt;
&lt;h1&gt;符号表管理&lt;/h1&gt;
&lt;p&gt;符号表结构：&lt;/p&gt;
&lt;p&gt;名字、特性（类型、值、种类等）&lt;/p&gt;
&lt;p&gt;组织方式：&lt;/p&gt;
&lt;p&gt;统一符号表（不管什么都填入到一个格式的符号表），结构简单&lt;/p&gt;
&lt;p&gt;不同种类建立不同的，节省空间但是不方便&lt;/p&gt;
&lt;p&gt;折中办法：共有信息总结成统一格式，特殊信息用指针连接到附表&lt;/p&gt;
&lt;h3 id=&#34;非分程序结构和符号表&#34;&gt;非分程序结构和符号表&lt;/h3&gt;
&lt;p&gt;可独立进行编译的程序单元是不包含有子模块的单一模块&lt;/p&gt;
&lt;p&gt;作用域：&lt;/p&gt;
&lt;p&gt;子程序名、函数名、公共区域名 —— 全局&lt;/p&gt;
&lt;p&gt;程序单元内变量 —— 局部&lt;/p&gt;
&lt;p&gt;组织方式：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;全局符号表&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;局部符号表&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;分程序结构语言和符号表&#34;&gt;分程序结构语言和符号表&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;模块内可嵌入子模块&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;作用域：标识符定义时所处于的模块&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;过程或函数说明中定义的标识符（包括形参）其作用域为本过程体。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;循环语句中定义的标识符，其作用域为该循环语句&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&#34;image-20241210170904106.png&#34; alt=&#34;image-20241210170904106&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;h4 id=&#34;分程序符号表结构&#34;&gt;分程序符号表结构&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Outern&lt;/th&gt;
&lt;th&gt;Ecount&lt;/th&gt;
&lt;th&gt;Pointer&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;p&gt;Outern：直接外层编号&lt;/p&gt;
&lt;p&gt;Ecount：符号表项个数&lt;/p&gt;
&lt;p&gt;Pointer：该符号表起始位置&lt;/p&gt;
&lt;img src=&#34;image-20241210171349194.png&#34; alt=&#34;image-20241210171349194&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;出块后删除块符号表&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;u&gt;红框内删了&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&#34;image-20241210171359418.png&#34; alt=&#34;image-20241210171359418&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;h1&gt;运行时存储管理&lt;/h1&gt;
&lt;p&gt;栈地址寄存器，该空间位于&lt;strong&gt;高地址&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;静态存储分配&#34;&gt;静态存储分配&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;每个变量所需空间的大小在编译时已知&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在&lt;strong&gt;编译阶段&lt;/strong&gt;由编译程序实现对&lt;strong&gt;存储空间的管理&lt;/strong&gt;，为源程序中的变量分配存储&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;条件：&lt;strong&gt;在&lt;/strong&gt;编译时&lt;/strong&gt;能够确定源程序中变量在运行时的数据空间大小&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;不允许指针或动态分配&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不允许递归调用过程&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开辟一数据区，目标地址填入变量的符号表中&lt;/p&gt;
&lt;p&gt;没鸟用，我觉得不考🤓👆&lt;/p&gt;
&lt;h3 id=&#34;动态存储分配&#34;&gt;动态存储分配&lt;/h3&gt;
&lt;p&gt;这个必考🤓👆&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;局部数据区&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;参数区&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;display区&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;局部数据区&lt;/strong&gt;：存放局部变量&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参数区&lt;/strong&gt;：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;形参数据区：&lt;strong&gt;显式参数区&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;prev adb：&lt;strong&gt;存放调用模块记录基地址&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ret addr：&lt;strong&gt;返回地址&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ret value：&lt;strong&gt;函数返回值&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;display&lt;/strong&gt;区：存放&lt;strong&gt;各外层模块活动记录的基地址&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1{    2{  }      3{      4{  }    }    } 中，4应当存放AR1和AR3的基地址&lt;/p&gt;
&lt;h4 id=&#34;例题&#34;&gt;例题&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;重点：看call 了谁再加入活动记录&lt;/strong&gt;&lt;/p&gt;
 &lt;img src=&#34;image-20241210175114576.png&#34; alt=&#34;image-20241210175114576&#34; style=&#34;zoom:67%;&#34; /&gt; 
&lt;img src=&#34;image-20241210175135976.png&#34; alt=&#34;image-20241210175135976&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;p&gt;易错点：&lt;strong&gt;局部变量在参数上面&lt;/strong&gt;，因为其实是从下往上构建的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image-20241210175147431.png&#34; alt=&#34;image-20241210175147431&#34; style=&#34;zoom: 40%;&#34; /&gt; &lt;img src=&#34;image-20241210175347035.png&#34; alt=&#34;image-20241210175347035&#34; style=&#34;zoom:40%;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;数组需要加一个“数组的模块”&lt;/p&gt;
&lt;img src=&#34;image-20241210175451927.png&#34; alt=&#34;image-20241210175451927&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;img src=&#34;1733825146873.png&#34; alt=&#34;1733825146873&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;img src=&#34;1733825169171.png&#34; alt=&#34;1733825169171&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;p&gt;&lt;strong&gt;运行时地址计算&lt;/strong&gt;：考鸡毛，PPT就一页&lt;/p&gt;
&lt;h1&gt;错误处理？&lt;/h1&gt;
&lt;p&gt;就几页PPT，肯定只考小题&lt;/p&gt;
&lt;p&gt;语法错误：不符合语法、词法的错误&lt;/p&gt;
&lt;p&gt;语义错误：不符合语义规则或超越具体计算机系统限制（数据溢出、常数太大；符号表、静态存储溢出；动态存储溢出）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分析以后再报告&lt;/strong&gt;：保存错误，全分析完了再打印&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;边分析边报告&lt;/strong&gt;：顾名思义&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一般原则：诊断到错误并记录后，跳过当前语法成分继续分析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;运行时错误：下标变量、下标值越界；计算结果溢出；动态存储分配数据区溢出&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;错误局部化处理&lt;/strong&gt;:   发现错误后，尽可能将把错误的影响限制在一个局部的范围避免错误扩散和影响程序其它部分的分析&lt;/p&gt;
&lt;h1&gt;翻译文法&lt;/h1&gt;
&lt;h3 id=&#34;翻译文法概念-、-活动序列&#34;&gt;翻译文法概念 、 活动序列&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;输入文法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没插入动作符号的文法。&lt;/li&gt;
&lt;li&gt;推导产生&lt;strong&gt;输入序列&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;翻译文法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;插入了动作符号的文法&lt;/li&gt;
&lt;li&gt;推导产生&lt;strong&gt;活动序列&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;**活动序列：**包含 &lt;em&gt;输入序列&lt;/em&gt;、&lt;em&gt;动作序列&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入序列：由终结符组成&lt;/li&gt;
&lt;li&gt;动作序列：由动作符号组成&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;翻译文法是&lt;strong&gt;上下文无关文法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**符号串翻译文法：**输出@后的字符串的文法&lt;/p&gt;
&lt;p&gt;中缀表达式文法→逆波兰表示&lt;/p&gt;
&lt;p&gt;加入动作&lt;img src=&#34;image-20241212201947561.png&#34; alt=&#34;image-20241212201947561&#34; style=&#34;zoom:50%;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;属性翻译文法&#34;&gt;属性翻译文法&lt;/h3&gt;
&lt;img src=&#34;image-20241214212518649.png&#34; alt=&#34;image-20241214212518649&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;p&gt;L-属性翻译：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;继承属性
&lt;ol&gt;
&lt;li&gt;产生式左部非终结符号的继承属性，取前面表达式的右部该符号 的继承属性值&lt;/li&gt;
&lt;li&gt;产生式右侧符号的继承属性，使用当前式左侧符号的&lt;strong&gt;继承属性&lt;/strong&gt;或在该符号左边的符号&lt;strong&gt;属性&lt;/strong&gt;计算&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;综合属性
&lt;ol&gt;
&lt;li&gt;产生式右部非终结符号的综合属性值，取其&lt;strong&gt;推导产生式&lt;/strong&gt;左部同名非终结符号的综合属性值&lt;/li&gt;
&lt;li&gt;产生式左侧非终结符号的综合属性值，使用当前产生式左侧&lt;strong&gt;继承属性&lt;/strong&gt;或右侧符号的&lt;strong&gt;属性&lt;/strong&gt;计算&lt;/li&gt;
&lt;li&gt;动作符号的综合属性，使用该符号的继承属性或右侧符号的属性计算&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单赋值L-属性翻译要求：&lt;/p&gt;
&lt;p&gt;产生式右侧符号继承属性&lt;strong&gt;等于左部符号的继承属性值&lt;/strong&gt;，或等于出现在所给符号左部某个符号的&lt;strong&gt;综合属性值&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;产生式左部非终结符号的&lt;strong&gt;综合属性&lt;/strong&gt;，等于&lt;strong&gt;自身的继承属性&lt;/strong&gt;，或&lt;strong&gt;右部&lt;/strong&gt;某个符号的&lt;strong&gt;综合属性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;变换：&lt;/p&gt;
&lt;img src=&#34;image-20241213140210680.png&#34; alt=&#34;image-20241213140210680&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;p&gt;不符合规则，因为需要对f求值，修改为&lt;/p&gt;
&lt;img src=&#34;image-20241213140250766.png&#34; alt=&#34;image-20241213140250766&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;h1&gt;数组变量的声明处理&lt;/h1&gt;
&lt;p&gt;n维数组元素地址的计算&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex-display&#34;&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34; display=&#34;block&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mtext&gt;维的下界&lt;/mtext&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mtext&gt;，&lt;/mtext&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mtext&gt;维的上界&lt;/mtext&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mspace linebreak=&#34;newline&#34;&gt;&lt;/mspace&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mtext&gt;维元素当前数组的下标&lt;/mtext&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mspace linebreak=&#34;newline&#34;&gt;&lt;/mspace&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mtext&gt;：数组元素大小&lt;/mtext&gt;&lt;mspace linebreak=&#34;newline&#34;&gt;&lt;/mspace&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;D&lt;/mi&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mi&gt;O&lt;/mi&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msubsup&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;Σ&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msubsup&gt;&lt;mo stretchy=&#34;false&#34;&gt;[&lt;/mo&gt;&lt;mi&gt;V&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;]&lt;/mo&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mspace linebreak=&#34;newline&#34;&gt;&lt;/mspace&gt;&lt;mtext&gt;当&lt;/mtext&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;时，&lt;/mtext&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mspace linebreak=&#34;newline&#34;&gt;&lt;/mspace&gt;&lt;mtext&gt;当&lt;/mtext&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo&gt;&amp;lt;&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;时，&lt;/mtext&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msubsup&gt;&lt;mi mathvariant=&#34;normal&#34;&gt;Π&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;j&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msubsup&gt;&lt;mo stretchy=&#34;false&#34;&gt;[&lt;/mo&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;j&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;L&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;j&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo stretchy=&#34;false&#34;&gt;]&lt;/mo&gt;&lt;mspace linebreak=&#34;newline&#34;&gt;&lt;/mspace&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;i维的下界L(i)，i维的上界U(i)\\
i维元素当前数组的 下标V(i) \\
E：数组元素大小\\
ADR=LOC+\Sigma_{i=1}^{n}[V(i)-L(i)]\times P(i) \times E \\
当i=n时，P(i) = 1\\
当1&amp;lt;=i&amp;lt;n时，P(i) = \Pi_{j=i+1}^n [U(j)-L(j)+1] \\
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;维&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;的&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;下&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;界&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;维&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;的&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;上&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;界&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace newline&#34;&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;维&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;元&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;素&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;当&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;前&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;数&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;组&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;的&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;下&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;标&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace newline&#34;&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;：&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;数&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;组&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;元&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;素&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;大&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;小&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace newline&#34;&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;D&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.76666em;vertical-align:-0.08333em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;O&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07153em;&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;Σ&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.7143919999999999em;&#34;&gt;&lt;span style=&#34;top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mrel mtight&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.113em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.247em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;V&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;×&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;×&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace newline&#34;&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.68333em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;当&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;时&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace newline&#34;&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.72243em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;当&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.36687em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.69862em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;时&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.133108em;vertical-align:-0.383108em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;Π&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.714392em;&#34;&gt;&lt;span style=&#34;top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.05724em;&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;mrel mtight&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;mbin mtight&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.1130000000000004em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.383108em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05724em;&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05724em;&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace newline&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;其他内容&#34;&gt;其他内容&lt;/h3&gt;
&lt;p&gt;常量：识别类型，识别名字，赋值&lt;/p&gt;
&lt;p&gt;简单变量：要alloc&lt;/p&gt;
&lt;p&gt;记录变量：是用来引用几个不同名字所组成的实体&lt;/p&gt;
&lt;p&gt;过程声明：调用前需要确定参数、返回值&lt;/p&gt;
&lt;p&gt;马勒戈壁看不懂&lt;/p&gt;
&lt;h1&gt;中间代码&lt;/h1&gt;
&lt;h3 id=&#34;波兰表示&#34;&gt;波兰表示&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;算术表达式：&lt;/strong&gt; F * 3.1416 * R * ( H + R )&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;波兰表示：&lt;/strong&gt; * F 3.1416 * R * + H R&lt;/p&gt;
&lt;p&gt;**逆波兰表达式：**F 3.1416 * R * H R + *&lt;/p&gt;
&lt;p&gt;赋值语句 &lt;strong&gt;:=&lt;/strong&gt; 符号优先级最低&lt;/p&gt;
&lt;p&gt;if语句：if &amp;lt; expr &amp;gt; then &amp;lt; stmt1 &amp;gt; else &amp;lt; stmt2 &amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt; expr &amp;gt;  &amp;lt; label1 &amp;gt; BZ &amp;lt; stmt1 &amp;gt; &amp;lt; label2 &amp;gt; BR &amp;lt; stmt2 &amp;gt;&lt;/p&gt;
&lt;p&gt;BZ:如果&amp;lt; expr &amp;gt;结果为0，则跳转到label1，&lt;/p&gt;
&lt;p&gt;BR：跳转到label2&lt;/p&gt;
&lt;p&gt;label1再BR头，label2在BR尾&lt;/p&gt;
&lt;h3 id=&#34;N元表示&#34;&gt;N元表示&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;三元式&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;直接三元式&lt;/p&gt;
&lt;img src=&#34;image-20241212190228341.png&#34; alt=&#34;image-20241212190228341&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;p&gt;间接三元式：&lt;/p&gt;
&lt;img src=&#34;image-20241212190358243.png&#34; alt=&#34;image-20241212190358243&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;p&gt;四元式：&lt;/p&gt;
&lt;p&gt;(op, 操作数1, 操作数2, 结果)&lt;/p&gt;
&lt;h3 id=&#34;Pcode？&#34;&gt;Pcode？&lt;/h3&gt;
&lt;img src=&#34;image-20241212190619099.png&#34; alt=&#34;image-20241212190619099&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;h3 id=&#34;DAG图&#34;&gt;DAG图&lt;/h3&gt;
&lt;img src=&#34;image-20241212190646297.png&#34; alt=&#34;image-20241212190646297&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;h1&gt;代码优化&lt;/h1&gt;
&lt;h3 id=&#34;优化分类&#34;&gt;优化分类&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;局部优化：指在&lt;strong&gt;基本块内&lt;/strong&gt;进行的优化&lt;/li&gt;
&lt;li&gt;全局优化：跨越基本块，在&lt;strong&gt;函数/过程内&lt;/strong&gt;进行的优化，进行全局控制流和数据流分析&lt;/li&gt;
&lt;li&gt;循环优化：对&lt;strong&gt;循环语句&lt;/strong&gt;所生成的中间代码序列上所进行的优化&lt;/li&gt;
&lt;li&gt;跨函数优化：整个程序，&lt;strong&gt;跨函数&lt;/strong&gt;别名分析，逃逸分析&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;划分基本快&#34;&gt;划分基本快&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;整个语句第一条语句属于入口语句&lt;/li&gt;
&lt;li&gt;任何 条件/无条件 跳转语句转移到的提一条是入口&lt;/li&gt;
&lt;li&gt;紧跟在跳转语句后 第一条是入口&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;DAG图-2&#34;&gt;DAG图&lt;/h2&gt;
&lt;img src=&#34;image-20241214220958305.png&#34; alt=&#34;image-20241214220958305&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;img src=&#34;image-20241214221015196.png&#34; alt=&#34;image-20241214221015196&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;img src=&#34;image-20241214221033065.png&#34; alt=&#34;image-20241214221033065&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;img src=&#34;image-20241214221051582.png&#34; alt=&#34;image-20241214221051582&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;h3 id=&#34;中间代码构造DAG&#34;&gt;中间代码构造DAG&lt;/h3&gt;
&lt;img src=&#34;image-20241214223201319.png&#34; alt=&#34;image-20241214223201319&#34; style=&#34;zoom: 67%;&#34; /&gt; 
&lt;img src=&#34;image-20241214223238300.png&#34; alt=&#34;image-20241214223238300&#34; style=&#34;zoom:67%;&#34; /&gt; 
&lt;p&gt;**特殊注意：**如果出现 op A或 A op B；其中A、B为常数，需要合并常数&lt;/p&gt;
&lt;p&gt;**省流：**找左右操作数，找不到就新建，找到了就记录→找op，找不到就新建，找到了就记录节点号→找结果对应的变量，找不到就添加到op节点，找到了就把变量改到op节点&lt;/p&gt;
&lt;h3 id=&#34;DAG转中间代码&#34;&gt;DAG转中间代码&lt;/h3&gt;
&lt;img src=&#34;image-20241214223321143.png&#34; alt=&#34;image-20241214223321143&#34; style=&#34;zoom:67%;&#34; /&gt; 
&lt;p&gt;**省流：**从左向右，把没有父节点且不是叶节点的节点扔进队列，最后逆序输出。&lt;/p&gt;
&lt;h2 id=&#34;数据流分析&#34;&gt;数据流分析&lt;/h2&gt;
&lt;h3 id=&#34;到达定义分析&#34;&gt;到达定义分析&lt;/h3&gt;
&lt;p&gt;分析的是数据流信息 d1、d2、…&lt;/p&gt;
&lt;p&gt;gen[S]：S本身&lt;strong&gt;产生&lt;/strong&gt;的数据流信息&lt;/p&gt;
&lt;p&gt;kill[S]：S&lt;strong&gt;注销&lt;/strong&gt;的数据流信息&lt;/p&gt;
&lt;p&gt;in[S]：&lt;strong&gt;进入&lt;/strong&gt;S时的数据流信息&lt;/p&gt;
&lt;p&gt;in[B] = out[P1] ∪ out[P2] ∪ … （所有B的前驱块）&lt;/p&gt;
&lt;p&gt;out[S]：S末尾&lt;strong&gt;得到&lt;/strong&gt;的数据流信息&lt;/p&gt;
&lt;p&gt;out = gen ∪ ( in - kill )&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;步骤&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先写出gen和kill，能瞪眼看出来&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;从上往下&lt;/strong&gt;，&lt;u&gt;&lt;strong&gt;迭代&lt;/strong&gt;&lt;/u&gt;执行计算每个基本块的in和out&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;例题&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&#34;image-20241214230235300.png&#34; alt=&#34;image-20241214230235300&#34; style=&#34;zoom:67%;&#34; /&gt; 
&lt;img src=&#34;image-20241214231149157.png&#34; alt=&#34;image-20241214231149157&#34; style=&#34;zoom: 67%;&#34; /&gt; 
&lt;h3 id=&#34;活跃变量分析&#34;&gt;活跃变量分析&lt;/h3&gt;
&lt;p&gt;分析的是&lt;strong&gt;变量&lt;/strong&gt;x、y、i、…&lt;/p&gt;
&lt;p&gt;在use里出现的不可能在def出现，反之亦然&lt;/p&gt;
&lt;p&gt;def[B] :  在B中被&lt;strong&gt;定义&lt;/strong&gt;先于任何&lt;strong&gt;使用&lt;/strong&gt;的变量&lt;/p&gt;
&lt;p&gt;use[B] :  在B中被&lt;strong&gt;使用&lt;/strong&gt;先于任何&lt;strong&gt;定义&lt;/strong&gt;的变量&lt;/p&gt;
&lt;p&gt;in[B] :  use ∪ (out - def)&lt;/p&gt;
&lt;p&gt;out[B] :  in[P1] ∪ in[P2] ∪ … （所有B的后继块）&lt;/p&gt;
&lt;p&gt;**注意：**形如 x = x + 1的语句中，&lt;strong&gt;x先被使用&lt;/strong&gt; 再被定义&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;步骤&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;瞪眼法瞪出来每个块的use和def&lt;/li&gt;
&lt;li&gt;把所有块的in初始化为空&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;从下往上&lt;/strong&gt;，**&lt;u&gt;迭代&lt;/u&gt;**执行：计算每个块的out和in&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;例题&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&#34;image-20241215131533120.png&#34; alt=&#34;image-20241215131533120&#34; style=&#34;zoom: 67%;&#34; /&gt; 
&lt;h2 id=&#34;冲突图-和-定义-使用链&#34;&gt;冲突图 和 定义-使用链&lt;/h2&gt;
&lt;p&gt;两个变量中一个变量在另一个变量定义处是活跃的，那么他们之间有边连接。&lt;/p&gt;
&lt;h3 id=&#34;定义-使用链&#34;&gt;定义-使用链&lt;/h3&gt;
&lt;img src=&#34;image-20241215133105332.png&#34; alt=&#34;image-20241215133105332&#34; style=&#34;zoom:50%;&#34; /&gt; 
&lt;img src=&#34;image-20241215133322831.png&#34; alt=&#34;image-20241215133322831&#34; style=&#34;zoom:67%;&#34; /&gt; 
&lt;img src=&#34;image-20241215134615561.png&#34; alt=&#34;image-20241215134615561&#34; style=&#34;zoom:67%;&#34; /&gt; 
&lt;h2 id=&#34;全局寄存器分配&#34;&gt;全局寄存器分配&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;寄存器分为&lt;strong&gt;全局寄存器&lt;/strong&gt;和&lt;strong&gt;临时寄存器&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;引用计数法&#34;&gt;引用计数法&lt;/h3&gt;
&lt;p&gt;访问次数越多越可能获得全局寄存器，循环内变量获得加权&lt;/p&gt;
&lt;h3 id=&#34;图着色法&#34;&gt;图着色法&lt;/h3&gt;
&lt;p&gt;假设寄存器数目为K，假设K=3&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不断移去所有连接边小于K的点，直到不能移去&lt;/li&gt;
&lt;li&gt;选一个适当的点，记录为“不分配全局寄存器”，然后移走&lt;/li&gt;
&lt;li&gt;重复1、2，直到只剩一个点&lt;/li&gt;
&lt;li&gt;给最后一个点着色，按照节点移除顺序，把边和节点放回，并着色。“不分配全局寄存器”的节点不着色&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;循环优化？&#34;&gt;循环优化？&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;归纳变量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比如for（i=1；i&amp;lt;=10;i++）a[i] = b[i] + c[i]&lt;/p&gt;
&lt;p&gt;生成代码里&lt;/p&gt;
&lt;p&gt;t1=4*i （为了获取地址）&lt;/p&gt;
&lt;p&gt;t2 = b[t1]&lt;/p&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;p&gt;i=i+1&lt;/p&gt;
&lt;p&gt;可把4*优化掉，直接i = i+4&lt;/p&gt;
&lt;p&gt;**代码外提：**不需要在循环中的放出去&lt;/p&gt;
&lt;p&gt;**循环展开：**原本for循环把a[10]全变成0，现在不用for，一条一条置0&lt;/p&gt;
&lt;h2 id=&#34;基本块内优化类型&#34;&gt;基本块内优化类型&lt;/h2&gt;
&lt;p&gt;常数合并：2+3直接用5&lt;/p&gt;
&lt;p&gt;运算强度削弱：乘法改成左移、x/5改成x*0.5等&lt;/p&gt;
&lt;p&gt;复写传播优化：如x:=y语句，某些时候可以删去。&lt;/p&gt;
&lt;p&gt;删除死代码&lt;/p&gt;
&lt;p&gt;消除局部公共子表达式&lt;/p&gt;
&lt;p&gt;窥孔优化：&lt;strong&gt;化关注在目标指令的一个较短的序列&lt;/strong&gt;，&lt;strong&gt;删除其中的冗余代码&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;指令集架构&#34;&gt;指令集架构&lt;/h2&gt;
&lt;p&gt;C = A + B&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;栈式：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Push A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Push B&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Add&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Pop C&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;累加器式：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;LOAD A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ADD B&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;STORE C&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;寄存器-内存式：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;LOAD R1, A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ADD R2, R1, B&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;STORE R2,C&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;寄存器-寄存器式：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;LOAD R1, A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LOAD R2, B&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ADD R3, R1, R2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;STORE R3, C&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="大学" />
        <category term="总结" />
        <category term="编译原理" />
        <updated>2024-12-17T15:17:09.000Z</updated>
    </entry>
</feed>
