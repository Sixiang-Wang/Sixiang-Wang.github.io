{
    "version": "https://jsonfeed.org/version/1",
    "title": "机煲的小窝 • All posts by \"编译原理\" tag",
    "description": "",
    "home_page_url": "https://blog.unfinished.top",
    "items": [
        {
            "id": "https://blog.unfinished.top/2024/12/17/%E6%88%91%E8%A6%81%E6%88%90%E4%B8%BA%E7%BC%96%E8%AF%91%E9%AB%98%E6%89%8B/",
            "url": "https://blog.unfinished.top/2024/12/17/%E6%88%91%E8%A6%81%E6%88%90%E4%B8%BA%E7%BC%96%E8%AF%91%E9%AB%98%E6%89%8B/",
            "title": "我要成为编译高手",
            "date_published": "2024-12-17T15:17:09.000Z",
            "content_html": "<p><img src=\"%E6%88%91%E8%A6%81%E6%88%90%E4%B8%BA%E9%AB%98%E6%89%8B.jpg\" alt=\"我要成为高手\"></p>\n<h1>文法</h1>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>符号串乘积</mtext><mo stretchy=\"false\">{</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">}</mo><mo>∗</mo><mo stretchy=\"false\">{</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>d</mi><mo stretchy=\"false\">}</mo><mo>=</mo><mo stretchy=\"false\">{</mo><mi>a</mi><mi>c</mi><mtext>，</mtext><mi>a</mi><mi>d</mi><mtext>，</mtext><mi>b</mi><mi>c</mi><mtext>，</mtext><mi>b</mi><mi>d</mi><mo stretchy=\"false\">}</mo><mspace linebreak=\"newline\"></mspace><mtext>幂运算</mtext><mspace linebreak=\"newline\"></mspace><msup><mi>A</mi><mn>0</mn></msup><mo>=</mo><mi>ε</mi><mo separator=\"true\">,</mo><msup><mi>A</mi><mn>1</mn></msup><mo>=</mo><mi>A</mi><mo separator=\"true\">,</mo><msup><mi>A</mi><mn>2</mn></msup><mo>=</mo><mi>A</mi><mi>A</mi><mspace linebreak=\"newline\"></mspace><mtext>正闭包</mtext><mo>:</mo><msup><mi>A</mi><mo>+</mo></msup><mo>=</mo><msup><mi>A</mi><mn>1</mn></msup><mo>∪</mo><msup><mi>A</mi><mn>2</mn></msup><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>∪</mo><msup><mi>A</mi><mi>n</mi></msup><mspace linebreak=\"newline\"></mspace><mtext>闭包</mtext><mo>:</mo><msup><mi>A</mi><mo>∗</mo></msup><mo>=</mo><msup><mi>A</mi><mn>0</mn></msup><mo>∪</mo><msup><mi>A</mi><mn>1</mn></msup><mo>∪</mo><msup><mi>A</mi><mn>2</mn></msup><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo>∪</mo><msup><mi>A</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">符号串乘积\\{a,b\\} * \\{c,d\\} = \\{ac，ad，bc，bd\\}\\\\\n幂运算\\\\\nA^0={ε},A^1 = A ,A^2 = AA\\\\\n正闭包:\nA^+=A^1∪A^2...∪A^n\\\\\n闭包:\nA^*=A^0∪A^1∪A^2...∪A^n\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord cjk_fallback\">符</span><span class=\"mord cjk_fallback\">号</span><span class=\"mord cjk_fallback\">串</span><span class=\"mord cjk_fallback\">乘</span><span class=\"mord cjk_fallback\">积</span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">}</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">}</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">c</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">}</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">幂</span><span class=\"mord cjk_fallback\">运</span><span class=\"mord cjk_fallback\">算</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8641079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0585479999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0585479999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">A</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">正</span><span class=\"mord cjk_fallback\">闭</span><span class=\"mord cjk_fallback\">包</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.821331em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.821331em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8641079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8641079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7143919999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">闭</span><span class=\"mord cjk_fallback\">包</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.738696em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.738696em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8641079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8641079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8641079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7143919999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>Vn：非终结符号集</p>\n<p>Vt：终结符号集</p>\n<p>P：产生式或规则的集合</p>\n<p>Z：开始符号（识别符号） Z∈Vn</p>\n<h3 id=\"基本概念\">基本概念</h3>\n<h4 id=\"推导\">推导</h4>\n<p><img src=\"image-20241210135553750.png\" alt=\"image-20241210135553750\" style=\"zoom:67%;\" /> 一步或多步</p>\n<p><img src=\"1733810193966(1).png\" alt=\"1733810193966(1)\" style=\"zoom: 67%;\" /> 零步一步或多步</p>\n<p><strong>最右推导</strong>：规范</p>\n<h4 id=\"句子句型\">句子句型</h4>\n<p>句型：Z零步一步或多步推导到x</p>\n<p>句子：Z一步或多步推导到x，且x内符号都是终结符</p>\n<p>语言：所有句子的集合 L(G[Z])</p>\n<p>若两个文法语言相同，则文法等价。</p>\n<h4 id=\"短语、句柄\">短语、句柄</h4>\n<p>短语是相对于一个<strong>句型</strong>的</p>\n<p>简单短语要求只有一步推导</p>\n<p>句柄是最左简单短语</p>\n<h4 id=\"规约\">规约</h4>\n<p>按照最左简单短语进行规约为规范规约。</p>\n<p>规范：<strong>最左规约</strong>，<strong>最右推导</strong></p>\n<h3 id=\"递归文法\">递归文法</h3>\n<p>U::= Uy，左递归</p>\n<p>U::= xU，右递归</p>\n<p><strong>左递归不能用自顶向下</strong></p>\n<h3 id=\"二义性\">二义性</h3>\n<ol>\n<li>一个文法的某一句子存在两棵不同的语法树，则该文法是二义性的</li>\n<li>若一个文法的某句子存在两个不同的规范推导，则该文法是二义性的</li>\n<li>若一个文法的某规范句型的句柄不唯一，则该文法是二义性的</li>\n</ol>\n<h3 id=\"压缩文法\">压缩文法</h3>\n<p><strong>U::=U</strong>的文法是有害的</p>\n<p><strong>规则的左部非终结符不出现在任何句型中</strong>的文法是无用的</p>\n<p><strong>无有害规则或多余规则</strong>的文法是<strong>压缩过的</strong></p>\n<h3 id=\"文法类型\">文法类型</h3>\n<p>0型：左部和右部都可以是符号串；一个短语可以产生另一个短语；可以被<strong>图灵机</strong>接受</p>\n<p>1型：上下文有关文法，<strong>xUy::= xuy</strong> ; 可以被<strong>线性界限自动机接受</strong></p>\n<p>2型：上下文无关文法，<strong>U::= u</strong>，U∈Vn ,  n∈V* ； 可以被<strong>下推自动机</strong>接受</p>\n<p>3型：正则文法，<strong>U::=t</strong>，U::=Wt（左线性）或U::=tW（右线性） <strong>其中U、W∈Vn，t∈Vt</strong>，可以被<strong>有穷自动机</strong>接受</p>\n<h1>词法分析</h1>\n<h3 id=\"状态图\">状态图</h3>\n<p><strong>左线性文法</strong>状态图：</p>\n<p>设置开始状态S，若Q::=t, <img src=\"1733812726285.png\" alt=\"1733812726285\" style=\"zoom: 50%;\" /></p>\n<p>若Q::=Rt，<img src=\"1733812771271.png\" alt=\"1733812771271\" style=\"zoom:50%;\" /></p>\n<img src=\"1733813469367.png\" alt=\"1733813469367\" style=\"zoom:50%;\" /> \n<h3 id=\"正则表达式\">正则表达式</h3>\n<p>运算符</p>\n<p>|：或</p>\n<p>*或{ }：重复</p>\n<h3 id=\"DFA\">DFA</h3>\n<img src=\"1733814606183.png\" alt=\"1733814606183\" style=\"zoom:50%;\" /> \n<h3 id=\"NFA（非确定）\">NFA（非确定）</h3>\n<p>一个状态经过一个终结符可以到多个状态，可以输入空值</p>\n<img src=\"1733814412975.png\" alt=\"1733814412975\" style=\"zoom: 67%;\" /> \n<h3 id=\"生成NFA（和状态图不一样）\">生成NFA（和状态图不一样）</h3>\n<p>用右线性文法，因为左线性会死循环</p>\n<p><strong>A→tB</strong>：<img src=\"1733815716718.png\" alt=\"1733815716718\" style=\"zoom:50%;\" /></p>\n<p>A→t：则A经过t到终结状态</p>\n<img src=\"1733816009576.png\" alt=\"1733816009576\" style=\"zoom:50%;\" /> \n<img src=\"1733816058396.png\" alt=\"1733816058396\" style=\"zoom:50%;\" /> \n<p>或</p>\n<img src=\"1733816105599.png\" alt=\"1733816105599\" style=\"zoom:50%;\" /> \n<h3 id=\"NFA的确定化\">NFA的确定化</h3>\n<p>1.确定集合I的<strong>ε-闭包</strong>：I以及从I经过ε弧能到的所有状态集合</p>\n<p>2.确定闭包的Ia、Ib、…</p>\n<img src=\"1733815278257.png\" alt=\"1733815278257\" style=\"zoom:50%;\" /> \n<p>3.得到新的状态图</p>\n<img src=\"1733815410213.png\" alt=\"1733815410213\" style=\"zoom:50%;\" /> \n<h3 id=\"最小化\">最小化</h3>\n<p>消除多余状态：肉眼看，删除不会到达的状态</p>\n<p>划分等价状态：</p>\n<ol>\n<li>将状态先分为终结状态和非终结状态</li>\n<li>在每个区域中看哪些状态经过符号后到达的状态等价</li>\n</ol>\n<h1>语法分析</h1>\n<h2 id=\"自顶向下分析\">自顶向下分析</h2>\n<p>不能有左递归！</p>\n<p>要消除左递归：</p>\n<ul>\n<li>使用BNF改写：\n<ol>\n<li>U::= xy|xw → U::=x(y|w)</li>\n<li>T∷= T * F | T / F | F  → T∷= F { * F | / F }</li>\n</ol>\n</li>\n<li>左递归改成右递归：\n<ol>\n<li>P::= Pa|b  →  P ::= bP’     P’ ::=aP’ | ε</li>\n</ol>\n</li>\n</ul>\n<p>消除一般左递归：</p>\n<img src=\"1733819340540.png\" alt=\"1733819340540\" style=\"zoom: 67%;\" /> \n<img src=\"1733819367290(1).png\" alt=\"1733819367290(1)\" style=\"zoom: 67%;\" /> \n<p>消除回溯问题，将xV|xU改成 x(V|U)，并尽力保证FIRST(V)和FIRST(U)不相交。</p>\n<p>无法消除回溯的话，可以超前扫描几个符号</p>\n<h3 id=\"递归下降子程序\">递归下降子程序</h3>\n<p>简单</p>\n<img src=\"1733819654619.png\" alt=\"1733819654619\" style=\"zoom:50%;\" /> \n<h3 id=\"LL-1-分析法\">LL(1)分析法</h3>\n<p><strong>自左向右扫描</strong>符号串</p>\n<h4 id=\"First、Follow集\">First、Follow集</h4>\n<p><strong>First</strong></p>\n<p>若Xi∈Vt，则First(Xi)={Xi}</p>\n<p>若Xi∈Vn，Xi::= a…| ε, First(Xi) = {a, ε}</p>\n<p>若Xi∈Vn ，</p>\n<ul>\n<li>Xi::= y1y2…yk，将FIRST(y1 ) – {ε} 加入First（Xi）</li>\n<li>若ε ∈ FIRST( y1 ) ，则将FIRST(y2 ) – {ε} 加入</li>\n<li>…</li>\n<li>若全都有ε，First集加入ε</li>\n</ul>\n<p><strong>Follow</strong></p>\n<p>若S为识别符号，则 # 加入Follow（S）</p>\n<p>若 A ::= αBβ 则把 <strong>FIRST(β)-{ε}</strong> 加入到 Follow（B）</p>\n<p>若 A ::= αBβ β能推出ε  或 A::= αB ，则把**Follow(A)**加入到Follow(B)</p>\n<h4 id=\"构造分析表\">构造分析表</h4>\n<ul>\n<li>S ::= A是某规则，a为终结符或#,  把所有 a∈ FIRST( A ) ，M[S, a] 放入该条规则</li>\n<li>若A=ε或 A能推出ε，则把所有 a∈ FOLLOW( S )的 M[S,a]放 S::=ε</li>\n<li>剩下的全是error</li>\n</ul>\n<img src=\"image-20241214144657328.png\" alt=\"image-20241214144657328\" style=\"zoom:67%;\" /> \n<p>如果没有<strong>多重定义</strong>入口，则是LL(1)文法</p>\n<p><strong>LL(1)判断方法</strong></p>\n<p>如果是LL（1），那么当 S::= A1|A2</p>\n<ul>\n<li>\n<p>First(A1) <strong>∩</strong> First(A2) = Ф</p>\n</li>\n<li>\n<p>若A2 是 <strong>ε</strong>或可推出 <strong>ε</strong>，那么 First(A1) <strong>∩</strong> First(S) = Ф</p>\n</li>\n</ul>\n<h4 id=\"执行过程\">执行过程</h4>\n<p>假设E是识别符号</p>\n<p>符号栈开始状态 #E，读入输入串第一个符号</p>\n<p>根据栈顶符号X和输入符号a</p>\n<ul>\n<li>若 X ∈ Vt，X=a=#，停止</li>\n<li>若 X ∈ Vt，X=a不等于#，将X退出栈</li>\n<li>若 X ∈ Vt，X不等于a，出错</li>\n<li>若 X ∈ Vn，查表\n<ol>\n<li>若M[X,a] 为   X∷= U V W，则X弹出，先后将W、V、U入栈（注意顺序，U在栈顶）</li>\n<li>若M[X,a] 为 <strong>X::=ε</strong> 则把X弹出栈</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"自底向上分析\">自底向上分析</h2>\n<h3 id=\"算符优先分析\">算符优先分析</h3>\n<p><strong>算符文法不允许两个非终结符相邻</strong>！</p>\n<img src=\"image-20241214161251107.png\" alt=\"image-20241214161251107\" style=\"zoom:50%;\" /> \n<h4 id=\"FirstVT、LastVT\">FirstVT、LastVT</h4>\n<p>… 可以代表任意或为空</p>\n<p>FirstVT( U ) = {b | U→b… 或 U→Vb… ,  b ∈ Vt,  V ∈ Vn}</p>\n<p>LastVT( U ) = {a | U→…a 或 U→…aV ,  a ∈ Vt,  V ∈ Vn}</p>\n<p>构造FirstVT：</p>\n<ul>\n<li>如果有U::= b… 或 U::= Vb… 则 b∈FIRSTVT( U )</li>\n<li>如果有U::= V…，则所有 b∈FIRSTVT( V )，都有b∈FIRSTVT( U )</li>\n</ul>\n<p>构造LastVT：</p>\n<ul>\n<li>如果有U::= …a 或 U::= …aV 则 a∈LASTVT( U )</li>\n<li>如果有U::= …V，则所有 a∈LASTVT( V )，都有a∈LASTVT( U )</li>\n</ul>\n<h4 id=\"构造优先关系矩阵\">构造优先关系矩阵</h4>\n<p>打不出来，所以下面</p>\n<p>= 代表<img src=\"image-20241214164544651.png\" alt=\"image-20241214164544651\" style=\"zoom:50%;\" /></p>\n<p>&lt; 代表 <img src=\"image-20241214164608414.png\" alt=\"image-20241214164608414\" style=\"zoom:50%;\" /></p>\n<p>&gt; 代表<img src=\"image-20241214164640513.png\" alt=\"image-20241214164640513\" style=\"zoom:50%;\" /></p>\n<p>对于每条规则进行处理，</p>\n<p>假设规则为U::=X1 X2 … Xn</p>\n<p>for（i = 1；i&lt;=n-1 ;  i++）</p>\n<ul>\n<li>如果Xi 和 Xi+1都是Vt，则 Xi = Xi+1</li>\n<li>如果i&lt;=n-2 且 Xi 和 Xi+2都是Vt，但Xi+1是Vn，则Xi = Xi+2</li>\n<li>如果 Xi 是Vt     Xi+1是Vn ，则 Xi&lt; FIRSTVT(Xi+1)中每个符号</li>\n<li>如果 Xi 是Vn     Xi+1是Vt ，则  LASTVT(Xi)中每个符号 &gt; Xi+1</li>\n</ul>\n<h4 id=\"素短语\">素短语</h4>\n<p>素短语是一个 至少包含一个终结符号，且除了它自身不含更小的素短语的 短语</p>\n<p><strong>句柄是最左短语</strong></p>\n<p><strong>最左素短语不一定是句柄！</strong></p>\n<img src=\"image-20241214171149086.png\" alt=\"image-20241214171149086\" style=\"zoom:50%;\" /> \n<h4 id=\"执行过程-2\">执行过程</h4>\n<p>算符优先文法对最左素短语规约</p>\n<ul>\n<li><strong>&lt;：移进</strong></li>\n<li><strong>=：移进</strong></li>\n<li><strong>&gt;：规约</strong></li>\n</ul>\n<p><img src=\"image-20241214155739805.png\" alt=\"image-20241214155739805\"></p>\n<img src=\"image-20241214160049496.png\" alt=\"image-20241214160049496\" style=\"zoom:67%;\" /> \n<h3 id=\"LR分析法\">LR分析法</h3>\n<p>哦我的老天</p>\n<p>LR分析法规约的是句柄，算符优先归约的是最左素短语</p>\n<h4 id=\"活前缀\">活前缀</h4>\n<p>规范句型是通过规范规约（最左）得到的句型</p>\n<p>对于 αβt ，β表示句柄 ，若αβ = u1u2…ur，那么符号串u1…ui（1&lt;=i&lt;=r）是活前缀</p>\n<h4 id=\"构造LR-0\">构造LR(0)</h4>\n<p>1.让文法开始符号的规则只有一条</p>\n<p>2.构造闭包项目集</p>\n<p>3.构造goto</p>\n<p>action构造：</p>\n<p>A→a. 规约</p>\n<p>E’→a. 接受</p>\n<p>A→a.b （b∈ Vt）移进</p>\n<p>A→a.b （b∈ Vn）待约（无动作）</p>\n<p>会有 移进-规约 冲突</p>\n<h4 id=\"SLR（0）\">SLR（0）</h4>\n<p>改为看Follow集</p>\n<p>当A→α.     B→α.    X→α.b</p>\n<p>读入符号当 a = b，移进</p>\n<p>a∈Follow（A），A→α</p>\n<p>a∈Follow（B），B→α</p>\n<h1>符号表管理</h1>\n<p>符号表结构：</p>\n<p>名字、特性（类型、值、种类等）</p>\n<p>组织方式：</p>\n<p>统一符号表（不管什么都填入到一个格式的符号表），结构简单</p>\n<p>不同种类建立不同的，节省空间但是不方便</p>\n<p>折中办法：共有信息总结成统一格式，特殊信息用指针连接到附表</p>\n<h3 id=\"非分程序结构和符号表\">非分程序结构和符号表</h3>\n<p>可独立进行编译的程序单元是不包含有子模块的单一模块</p>\n<p>作用域：</p>\n<p>子程序名、函数名、公共区域名 —— 全局</p>\n<p>程序单元内变量 —— 局部</p>\n<p>组织方式：</p>\n<table>\n<thead>\n<tr>\n<th>全局符号表</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>局部符号表</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"分程序结构语言和符号表\">分程序结构语言和符号表</h3>\n<p><strong>模块内可嵌入子模块</strong></p>\n<p>作用域：标识符定义时所处于的模块</p>\n<p><strong>过程或函数说明中定义的标识符（包括形参）其作用域为本过程体。</strong></p>\n<p><strong>循环语句中定义的标识符，其作用域为该循环语句</strong></p>\n<img src=\"image-20241210170904106.png\" alt=\"image-20241210170904106\" style=\"zoom:50%;\" /> \n<h4 id=\"分程序符号表结构\">分程序符号表结构</h4>\n<table>\n<thead>\n<tr>\n<th>Outern</th>\n<th>Ecount</th>\n<th>Pointer</th>\n</tr>\n</thead>\n</table>\n<p>Outern：直接外层编号</p>\n<p>Ecount：符号表项个数</p>\n<p>Pointer：该符号表起始位置</p>\n<img src=\"image-20241210171349194.png\" alt=\"image-20241210171349194\" style=\"zoom:50%;\" />\n<p>出块后删除块符号表</p>\n<p><strong><u>红框内删了</u></strong></p>\n<img src=\"image-20241210171359418.png\" alt=\"image-20241210171359418\" style=\"zoom:50%;\" /> \n<h1>运行时存储管理</h1>\n<p>栈地址寄存器，该空间位于<strong>高地址</strong></p>\n<h3 id=\"静态存储分配\">静态存储分配</h3>\n<p><strong>每个变量所需空间的大小在编译时已知</strong></p>\n<p>在<strong>编译阶段</strong>由编译程序实现对<strong>存储空间的管理</strong>，为源程序中的变量分配存储</p>\n<p><strong>条件：<strong>在</strong>编译时</strong>能够确定源程序中变量在运行时的数据空间大小</p>\n<ul>\n<li><strong>不允许指针或动态分配</strong></li>\n<li><strong>不允许递归调用过程</strong></li>\n</ul>\n<p>开辟一数据区，目标地址填入变量的符号表中</p>\n<p>没鸟用，我觉得不考🤓👆</p>\n<h3 id=\"动态存储分配\">动态存储分配</h3>\n<p>这个必考🤓👆</p>\n<table>\n<thead>\n<tr>\n<th>局部数据区</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>参数区</td>\n</tr>\n<tr>\n<td>display区</td>\n</tr>\n</tbody>\n</table>\n<p><strong>局部数据区</strong>：存放局部变量</p>\n<p><strong>参数区</strong>：</p>\n<table>\n<thead>\n<tr>\n<th>形参数据区：<strong>显式参数区</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>prev adb：<strong>存放调用模块记录基地址</strong></td>\n</tr>\n<tr>\n<td>ret addr：<strong>返回地址</strong></td>\n</tr>\n<tr>\n<td>ret value：<strong>函数返回值</strong></td>\n</tr>\n</tbody>\n</table>\n<p><strong>display</strong>区：存放<strong>各外层模块活动记录的基地址</strong></p>\n<p>1{    2{  }      3{      4{  }    }    } 中，4应当存放AR1和AR3的基地址</p>\n<h4 id=\"例题\">例题</h4>\n<p><strong>重点：看call 了谁再加入活动记录</strong></p>\n <img src=\"image-20241210175114576.png\" alt=\"image-20241210175114576\" style=\"zoom:67%;\" /> \n<img src=\"image-20241210175135976.png\" alt=\"image-20241210175135976\" style=\"zoom:50%;\" /> \n<p>易错点：<strong>局部变量在参数上面</strong>，因为其实是从下往上构建的</p>\n<p><img src=\"image-20241210175147431.png\" alt=\"image-20241210175147431\" style=\"zoom: 40%;\" /> <img src=\"image-20241210175347035.png\" alt=\"image-20241210175347035\" style=\"zoom:40%;\" /></p>\n<p>数组需要加一个“数组的模块”</p>\n<img src=\"image-20241210175451927.png\" alt=\"image-20241210175451927\" style=\"zoom:50%;\" /> \n<img src=\"1733825146873.png\" alt=\"1733825146873\" style=\"zoom:50%;\" /> \n<img src=\"1733825169171.png\" alt=\"1733825169171\" style=\"zoom:50%;\" /> \n<p><strong>运行时地址计算</strong>：考鸡毛，PPT就一页</p>\n<h1>错误处理？</h1>\n<p>就几页PPT，肯定只考小题</p>\n<p>语法错误：不符合语法、词法的错误</p>\n<p>语义错误：不符合语义规则或超越具体计算机系统限制（数据溢出、常数太大；符号表、静态存储溢出；动态存储溢出）</p>\n<p><strong>分析以后再报告</strong>：保存错误，全分析完了再打印</p>\n<p><strong>边分析边报告</strong>：顾名思义</p>\n<ul>\n<li>一般原则：诊断到错误并记录后，跳过当前语法成分继续分析</li>\n</ul>\n<p>运行时错误：下标变量、下标值越界；计算结果溢出；动态存储分配数据区溢出</p>\n<p><strong>错误局部化处理</strong>:   发现错误后，尽可能将把错误的影响限制在一个局部的范围避免错误扩散和影响程序其它部分的分析</p>\n<h1>翻译文法</h1>\n<h3 id=\"翻译文法概念-、-活动序列\">翻译文法概念 、 活动序列</h3>\n<p><strong>输入文法：</strong></p>\n<ul>\n<li>没插入动作符号的文法。</li>\n<li>推导产生<strong>输入序列</strong></li>\n</ul>\n<p><strong>翻译文法：</strong></p>\n<ul>\n<li>插入了动作符号的文法</li>\n<li>推导产生<strong>活动序列</strong></li>\n</ul>\n<p>**活动序列：**包含 <em>输入序列</em>、<em>动作序列</em></p>\n<ul>\n<li>输入序列：由终结符组成</li>\n<li>动作序列：由动作符号组成</li>\n</ul>\n<p>翻译文法是<strong>上下文无关文法</strong></p>\n<p>**符号串翻译文法：**输出@后的字符串的文法</p>\n<p>中缀表达式文法→逆波兰表示</p>\n<p>加入动作<img src=\"image-20241212201947561.png\" alt=\"image-20241212201947561\" style=\"zoom:50%;\" /></p>\n<h3 id=\"属性翻译文法\">属性翻译文法</h3>\n<img src=\"image-20241214212518649.png\" alt=\"image-20241214212518649\" style=\"zoom:50%;\" /> \n<p>L-属性翻译：</p>\n<ul>\n<li>继承属性\n<ol>\n<li>产生式左部非终结符号的继承属性，取前面表达式的右部该符号 的继承属性值</li>\n<li>产生式右侧符号的继承属性，使用当前式左侧符号的<strong>继承属性</strong>或在该符号左边的符号<strong>属性</strong>计算</li>\n</ol>\n</li>\n<li>综合属性\n<ol>\n<li>产生式右部非终结符号的综合属性值，取其<strong>推导产生式</strong>左部同名非终结符号的综合属性值</li>\n<li>产生式左侧非终结符号的综合属性值，使用当前产生式左侧<strong>继承属性</strong>或右侧符号的<strong>属性</strong>计算</li>\n<li>动作符号的综合属性，使用该符号的继承属性或右侧符号的属性计算</li>\n</ol>\n</li>\n</ul>\n<p>简单赋值L-属性翻译要求：</p>\n<p>产生式右侧符号继承属性<strong>等于左部符号的继承属性值</strong>，或等于出现在所给符号左部某个符号的<strong>综合属性值</strong></p>\n<p>产生式左部非终结符号的<strong>综合属性</strong>，等于<strong>自身的继承属性</strong>，或<strong>右部</strong>某个符号的<strong>综合属性</strong></p>\n<p>变换：</p>\n<img src=\"image-20241213140210680.png\" alt=\"image-20241213140210680\" style=\"zoom:50%;\" /> \n<p>不符合规则，因为需要对f求值，修改为</p>\n<img src=\"image-20241213140250766.png\" alt=\"image-20241213140250766\" style=\"zoom:50%;\" /> \n<h1>数组变量的声明处理</h1>\n<p>n维数组元素地址的计算</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>i</mi><mtext>维的下界</mtext><mi>L</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mtext>，</mtext><mi>i</mi><mtext>维的上界</mtext><mi>U</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mi>i</mi><mtext>维元素当前数组的下标</mtext><mi>V</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mi>E</mi><mtext>：数组元素大小</mtext><mspace linebreak=\"newline\"></mspace><mi>A</mi><mi>D</mi><mi>R</mi><mo>=</mo><mi>L</mi><mi>O</mi><mi>C</mi><mo>+</mo><msubsup><mi mathvariant=\"normal\">Σ</mi><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy=\"false\">[</mo><mi>V</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>L</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>×</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo>×</mo><mi>E</mi><mspace linebreak=\"newline\"></mspace><mtext>当</mtext><mi>i</mi><mo>=</mo><mi>n</mi><mtext>时，</mtext><mi>P</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn><mspace linebreak=\"newline\"></mspace><mtext>当</mtext><mn>1</mn><mo>&lt;</mo><mo>=</mo><mi>i</mi><mo>&lt;</mo><mi>n</mi><mtext>时，</mtext><mi>P</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mi mathvariant=\"normal\">Π</mi><mrow><mi>j</mi><mo>=</mo><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy=\"false\">[</mo><mi>U</mi><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>L</mi><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mspace linebreak=\"newline\"></mspace></mrow><annotation encoding=\"application/x-tex\">i维的下界L(i)，i维的上界U(i)\\\\\ni维元素当前数组的 下标V(i) \\\\\nE：数组元素大小\\\\\nADR=LOC+\\Sigma_{i=1}^{n}[V(i)-L(i)]\\times P(i) \\times E \\\\\n当i=n时，P(i) = 1\\\\\n当1&lt;=i&lt;n时，P(i) = \\Pi_{j=i+1}^n [U(j)-L(j)+1] \\\\\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord cjk_fallback\">维</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">下</span><span class=\"mord cjk_fallback\">界</span><span class=\"mord mathnormal\">L</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\">i</span><span class=\"mord cjk_fallback\">维</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">上</span><span class=\"mord cjk_fallback\">界</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord cjk_fallback\">维</span><span class=\"mord cjk_fallback\">元</span><span class=\"mord cjk_fallback\">素</span><span class=\"mord cjk_fallback\">当</span><span class=\"mord cjk_fallback\">前</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord cjk_fallback\">组</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">下</span><span class=\"mord cjk_fallback\">标</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord cjk_fallback\">：</span><span class=\"mord cjk_fallback\">数</span><span class=\"mord cjk_fallback\">组</span><span class=\"mord cjk_fallback\">元</span><span class=\"mord cjk_fallback\">素</span><span class=\"mord cjk_fallback\">大</span><span class=\"mord cjk_fallback\">小</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\">Σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">当</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord cjk_fallback\">时</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord cjk_fallback\">当</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69862em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord cjk_fallback\">时</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.133108em;vertical-align:-0.383108em;\"></span><span class=\"mord\"><span class=\"mord\">Π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714392em;\"><span style=\"top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.383108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span><span class=\"mspace newline\"></span></span></span></span></p>\n<h3 id=\"其他内容\">其他内容</h3>\n<p>常量：识别类型，识别名字，赋值</p>\n<p>简单变量：要alloc</p>\n<p>记录变量：是用来引用几个不同名字所组成的实体</p>\n<p>过程声明：调用前需要确定参数、返回值</p>\n<p>马勒戈壁看不懂</p>\n<h1>中间代码</h1>\n<h3 id=\"波兰表示\">波兰表示</h3>\n<p><strong>算术表达式：</strong> F * 3.1416 * R * ( H + R )</p>\n<p><strong>波兰表示：</strong> * F 3.1416 * R * + H R</p>\n<p>**逆波兰表达式：**F 3.1416 * R * H R + *</p>\n<p>赋值语句 <strong>:=</strong> 符号优先级最低</p>\n<p>if语句：if &lt; expr &gt; then &lt; stmt1 &gt; else &lt; stmt2 &gt;</p>\n<p>&lt; expr &gt;  &lt; label1 &gt; BZ &lt; stmt1 &gt; &lt; label2 &gt; BR &lt; stmt2 &gt;</p>\n<p>BZ:如果&lt; expr &gt;结果为0，则跳转到label1，</p>\n<p>BR：跳转到label2</p>\n<p>label1再BR头，label2在BR尾</p>\n<h3 id=\"N元表示\">N元表示</h3>\n<p><strong>三元式</strong>：</p>\n<p>直接三元式</p>\n<img src=\"image-20241212190228341.png\" alt=\"image-20241212190228341\" style=\"zoom:50%;\" /> \n<p>间接三元式：</p>\n<img src=\"image-20241212190358243.png\" alt=\"image-20241212190358243\" style=\"zoom:50%;\" /> \n<p>四元式：</p>\n<p>(op, 操作数1, 操作数2, 结果)</p>\n<h3 id=\"Pcode？\">Pcode？</h3>\n<img src=\"image-20241212190619099.png\" alt=\"image-20241212190619099\" style=\"zoom:50%;\" /> \n<h3 id=\"DAG图\">DAG图</h3>\n<img src=\"image-20241212190646297.png\" alt=\"image-20241212190646297\" style=\"zoom:50%;\" /> \n<h1>代码优化</h1>\n<h3 id=\"优化分类\">优化分类</h3>\n<ul>\n<li>局部优化：指在<strong>基本块内</strong>进行的优化</li>\n<li>全局优化：跨越基本块，在<strong>函数/过程内</strong>进行的优化，进行全局控制流和数据流分析</li>\n<li>循环优化：对<strong>循环语句</strong>所生成的中间代码序列上所进行的优化</li>\n<li>跨函数优化：整个程序，<strong>跨函数</strong>别名分析，逃逸分析</li>\n</ul>\n<h3 id=\"划分基本快\">划分基本快</h3>\n<ol>\n<li>整个语句第一条语句属于入口语句</li>\n<li>任何 条件/无条件 跳转语句转移到的提一条是入口</li>\n<li>紧跟在跳转语句后 第一条是入口</li>\n</ol>\n<h2 id=\"DAG图-2\">DAG图</h2>\n<img src=\"image-20241214220958305.png\" alt=\"image-20241214220958305\" style=\"zoom:50%;\" /> \n<img src=\"image-20241214221015196.png\" alt=\"image-20241214221015196\" style=\"zoom:50%;\" /> \n<img src=\"image-20241214221033065.png\" alt=\"image-20241214221033065\" style=\"zoom:50%;\" /> \n<img src=\"image-20241214221051582.png\" alt=\"image-20241214221051582\" style=\"zoom:50%;\" /> \n<h3 id=\"中间代码构造DAG\">中间代码构造DAG</h3>\n<img src=\"image-20241214223201319.png\" alt=\"image-20241214223201319\" style=\"zoom: 67%;\" /> \n<img src=\"image-20241214223238300.png\" alt=\"image-20241214223238300\" style=\"zoom:67%;\" /> \n<p>**特殊注意：**如果出现 op A或 A op B；其中A、B为常数，需要合并常数</p>\n<p>**省流：**找左右操作数，找不到就新建，找到了就记录→找op，找不到就新建，找到了就记录节点号→找结果对应的变量，找不到就添加到op节点，找到了就把变量改到op节点</p>\n<h3 id=\"DAG转中间代码\">DAG转中间代码</h3>\n<img src=\"image-20241214223321143.png\" alt=\"image-20241214223321143\" style=\"zoom:67%;\" /> \n<p>**省流：**从左向右，把没有父节点且不是叶节点的节点扔进队列，最后逆序输出。</p>\n<h2 id=\"数据流分析\">数据流分析</h2>\n<h3 id=\"到达定义分析\">到达定义分析</h3>\n<p>分析的是数据流信息 d1、d2、…</p>\n<p>gen[S]：S本身<strong>产生</strong>的数据流信息</p>\n<p>kill[S]：S<strong>注销</strong>的数据流信息</p>\n<p>in[S]：<strong>进入</strong>S时的数据流信息</p>\n<p>in[B] = out[P1] ∪ out[P2] ∪ … （所有B的前驱块）</p>\n<p>out[S]：S末尾<strong>得到</strong>的数据流信息</p>\n<p>out = gen ∪ ( in - kill )</p>\n<p><strong>步骤</strong></p>\n<ol>\n<li>先写出gen和kill，能瞪眼看出来</li>\n<li><strong>从上往下</strong>，<u><strong>迭代</strong></u>执行计算每个基本块的in和out</li>\n</ol>\n<p><strong>例题</strong></p>\n<img src=\"image-20241214230235300.png\" alt=\"image-20241214230235300\" style=\"zoom:67%;\" /> \n<img src=\"image-20241214231149157.png\" alt=\"image-20241214231149157\" style=\"zoom: 67%;\" /> \n<h3 id=\"活跃变量分析\">活跃变量分析</h3>\n<p>分析的是<strong>变量</strong>x、y、i、…</p>\n<p>在use里出现的不可能在def出现，反之亦然</p>\n<p>def[B] :  在B中被<strong>定义</strong>先于任何<strong>使用</strong>的变量</p>\n<p>use[B] :  在B中被<strong>使用</strong>先于任何<strong>定义</strong>的变量</p>\n<p>in[B] :  use ∪ (out - def)</p>\n<p>out[B] :  in[P1] ∪ in[P2] ∪ … （所有B的后继块）</p>\n<p>**注意：**形如 x = x + 1的语句中，<strong>x先被使用</strong> 再被定义</p>\n<p><strong>步骤</strong>：</p>\n<ol>\n<li>瞪眼法瞪出来每个块的use和def</li>\n<li>把所有块的in初始化为空</li>\n<li><strong>从下往上</strong>，**<u>迭代</u>**执行：计算每个块的out和in</li>\n</ol>\n<p><strong>例题</strong></p>\n<img src=\"image-20241215131533120.png\" alt=\"image-20241215131533120\" style=\"zoom: 67%;\" /> \n<h2 id=\"冲突图-和-定义-使用链\">冲突图 和 定义-使用链</h2>\n<p>两个变量中一个变量在另一个变量定义处是活跃的，那么他们之间有边连接。</p>\n<h3 id=\"定义-使用链\">定义-使用链</h3>\n<img src=\"image-20241215133105332.png\" alt=\"image-20241215133105332\" style=\"zoom:50%;\" /> \n<img src=\"image-20241215133322831.png\" alt=\"image-20241215133322831\" style=\"zoom:67%;\" /> \n<img src=\"image-20241215134615561.png\" alt=\"image-20241215134615561\" style=\"zoom:67%;\" /> \n<h2 id=\"全局寄存器分配\">全局寄存器分配</h2>\n<ul>\n<li>寄存器分为<strong>全局寄存器</strong>和<strong>临时寄存器</strong></li>\n</ul>\n<h3 id=\"引用计数法\">引用计数法</h3>\n<p>访问次数越多越可能获得全局寄存器，循环内变量获得加权</p>\n<h3 id=\"图着色法\">图着色法</h3>\n<p>假设寄存器数目为K，假设K=3</p>\n<ol>\n<li>不断移去所有连接边小于K的点，直到不能移去</li>\n<li>选一个适当的点，记录为“不分配全局寄存器”，然后移走</li>\n<li>重复1、2，直到只剩一个点</li>\n<li>给最后一个点着色，按照节点移除顺序，把边和节点放回，并着色。“不分配全局寄存器”的节点不着色</li>\n</ol>\n<h2 id=\"循环优化？\">循环优化？</h2>\n<p><strong>归纳变量</strong></p>\n<p>比如for（i=1；i&lt;=10;i++）a[i] = b[i] + c[i]</p>\n<p>生成代码里</p>\n<p>t1=4*i （为了获取地址）</p>\n<p>t2 = b[t1]</p>\n<p>…</p>\n<p>i=i+1</p>\n<p>可把4*优化掉，直接i = i+4</p>\n<p>**代码外提：**不需要在循环中的放出去</p>\n<p>**循环展开：**原本for循环把a[10]全变成0，现在不用for，一条一条置0</p>\n<h2 id=\"基本块内优化类型\">基本块内优化类型</h2>\n<p>常数合并：2+3直接用5</p>\n<p>运算强度削弱：乘法改成左移、x/5改成x*0.5等</p>\n<p>复写传播优化：如x:=y语句，某些时候可以删去。</p>\n<p>删除死代码</p>\n<p>消除局部公共子表达式</p>\n<p>窥孔优化：<strong>化关注在目标指令的一个较短的序列</strong>，<strong>删除其中的冗余代码</strong></p>\n<h2 id=\"指令集架构\">指令集架构</h2>\n<p>C = A + B</p>\n<p><strong>栈式：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Push A</span><br><span class=\"line\">Push B</span><br><span class=\"line\">Add</span><br><span class=\"line\">Pop C</span><br></pre></td></tr></table></figure>\n<p><strong>累加器式：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOAD A</span><br><span class=\"line\">ADD B</span><br><span class=\"line\">STORE C</span><br></pre></td></tr></table></figure>\n<p><strong>寄存器-内存式：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOAD R1, A</span><br><span class=\"line\">ADD R2, R1, B</span><br><span class=\"line\">STORE R2,C</span><br></pre></td></tr></table></figure>\n<p><strong>寄存器-寄存器式：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOAD R1, A</span><br><span class=\"line\">LOAD R2, B</span><br><span class=\"line\">ADD R3, R1, R2</span><br><span class=\"line\">STORE R3, C</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "大学",
                "总结",
                "编译原理"
            ]
        }
    ]
}